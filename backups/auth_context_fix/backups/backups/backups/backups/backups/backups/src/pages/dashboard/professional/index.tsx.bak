import React, { useState, useEffect } from 'react';
import { Calendar, Clock, DollarSign, Users, Scissors, Settings, PlusCircle } from 'lucide-react';
import Link from 'next/link';
import { useAuth } from '\.\./\.\./\.\./\.\./\.\./\.\./\.\./\.\./\.\./auth_context_fix/backups/auth_context_fix/backups/auth_context_fix/src/contexts/AuthContext\.tsx';
import { ProfessionalDashboardLayout } from '../../../components/layout/ProfessionalDashboardLayout';

// Mock data for appointments
const mockAppointments = [
  {
    id: '1',
    client: {
      id: '201',
      name: 'Mariana Silva',
      image: '/api/placeholder/100/100'
    },
    serviceName: 'Box Braids',
    date: '2025-04-17T10:00:00',
    price: 250,
    status: 'confirmed',
    isHomeService: false
  },
  {
    id: '2',
    client: {
      id: '202',
      name: 'Carolina Mendes',
      image: '/api/placeholder/100/100'
    },
    serviceName: 'Twist Senegalês',
    date: '2025-04-17T14:30:00',
    price: 290,
    status: 'confirmed',
    isHomeService: true
  },
  {
    id: '3',
    client: {
      id: '203',
      name: 'Juliana Costa',
      image: '/api/placeholder/100/100'
    },
    serviceName: 'Penteado para Festa',
    date: '2025-04-18T15:00:00',
    price: 150,
    status: 'confirmed',
    isHomeService: false
  }
];

// Mock data for analytics
const mockAnalytics = {
  totalAppointments: 15,
  canceledAppointments: 2,
  totalEarnings: 3250,
  reviewsCount: 23,
  averageRating: 4.8
};

const ProfessionalDashboard: React.FC = () => {
  const { user } = useAuth();
  const [todayAppointments, setTodayAppointments] = useState<any[]>([]);
  const [analytics, setAnalytics] = useState(mockAnalytics);
  const [isLoading, setIsLoading] = useState(true);

  useEffect(() => {
    const fetchData = async () => {
      try {
        setIsLoading(true);
        // In a real app, we would call the API to get appointments
        // const data = await professionalService.getDashboardData();
        
        // Using mock data for now
        setTimeout(() => {
          const today = new Date().toISOString().split('T')[0];
          const appointments = mockAppointments.filter(app => 
            app.date.startsWith(today)
          );
          
          setTodayAppointments(appointments);
          setIsLoading(false);
        }, 800);
      } catch (error) {
        console.error('Error fetching dashboard data:', error);
        setIsLoading(false);
      }
    };

    fetchData();
  }, []);

  const formatTime = (dateString: string) => {
    const date = new Date(dateString);
    return date.toLocaleTimeString('pt-BR', {
      hour: '2-digit',
      minute: '2-digit'
    });
  };

  return (
    <ProfessionalDashboardLayout title="Dashboard - Agenda Livre">
      <div className="p-4 lg:p-6">
        <h1 className="text-2xl font-medium mb-6">Olá, {user?.name || 'Profissional'}</h1>
        
        {/* Quick Stats */}
        <div className="grid grid-cols-2 gap-4 mb-8 sm:grid-cols-4">
          <div className="bg-white p-4 rounded-xl shadow-sm">
            <div className="text-gray-500 text-sm mb-1">Agendamentos</div>
            <div className="text-2xl font-medium">{analytics.totalAppointments}</div>
          </div>
          <div className="bg-white p-4 rounded-xl shadow-sm">
            <div className="text-gray-500 text-sm mb-1">Faturamento</div>
            <div className="text-2xl font-medium">R$ {analytics.totalEarnings}</div>
          </div>
          <div className="bg-white p-4 rounded-xl shadow-sm">
            <div className="text-gray-500 text-sm mb-1">Avaliações</div>
            <div className="text-2xl font-medium">{analytics.reviewsCount}</div>
          </div>
          <div className="bg-white p-4 rounded-xl shadow-sm">
            <div className="text-gray-500 text-sm mb-1">Cancelamentos</div>
            <div className="text-2xl font-medium">{analytics.canceledAppointments}</div>
          </div>
        </div>
        
        {/* Today's Schedule */}
        <section className="mb-8">
          <div className="flex items-center justify-between mb-4">
            <h2 className="text-lg font-medium">Agenda de Hoje</h2>
            <Link href="/dashboard/professional/appointments" className="text-sm text-purple-600">
              Ver agenda completa
            </Link>
          </div>
          
          {isLoading ? (
            <div className="py-12 flex items-center justify-center">
              <div className="animate-pulse text-gray-500">Carregando...</div>
            </div>
          ) : todayAppointments.length === 0 ? (
            <div className="bg-white rounded-xl p-6 text-center">
              <div className="text-gray-500 mb-3">Sem agendamentos para hoje</div>
              <Link href="/dashboard/professional/schedule" className="text-purple-600 font-medium">
                Gerenciar disponibilidade
              </Link>
            </div>
          ) : (
            <div className="space-y-3">
              {todayAppointments.map((appointment) => (
                <div key={appointment.id} className="bg-white p-4 rounded-xl shadow-sm">
                  <div className="flex justify-between items-center mb-3">
                    <div className="flex items-center">
                      <div className="w-12 h-12 rounded-lg overflow-hidden mr-3">
                        <img 
                          src={appointment.client.image} 
                          alt={appointment.client.name} 
                          className="w-full h-full object-cover"
                        />
                      </div>
                      <div>
                        <h3 className="font-medium">{appointment.client.name}</h3>
                        <div className="text-gray-500 text-xs mt-1">
                          Cliente
                        </div>
                      </div>
                    </div>
                    <div className="text-purple-600 font-medium">
                      {formatTime(appointment.date)}
                    </div>
                  </div>
                  
                  <div className="flex justify-between items-center">
                    <div>
                      <div className="font-medium">{appointment.serviceName}</div>
                      <div className="text-gray-500 text-sm">R$ {appointment.price.toFixed(2)}</div>
                    </div>
                    
                    {appointment.isHomeService && (
                      <div className="bg-blue-50 text-blue-700 text-xs px-2 py-1 rounded-lg">
                        A domicílio
                      </div>
                    )}
                  </div>
                  
                  <div className="mt-4 flex space-x-3">
                    <Link 
                      href={`/dashboard/professional/appointments/${appointment.id}`}
                      className="flex-1 py-2 text-center border border-purple-200 text-purple-600 rounded-lg text-sm font-medium"
                    >
                      Ver detalhes
                    </Link>
                    <button
                      className="flex-1 py-2 text-center bg-purple-600 text-white rounded-lg text-sm font-medium"
                    >
                      Confirmar chegada
                    </button>
                  </div>
                </div>
              ))}
            </div>
          )}
        </section>
        
        {/* Quick Actions */}
        <section>
          <h2 className="text-lg font-medium mb-4">Ações Rápidas</h2>
          <div className="grid grid-cols-2 sm:grid-cols-4 gap-3">
            <Link href="/dashboard/professional/schedule" className="bg-white p-4 rounded-xl shadow-sm flex flex-col items-center text-center">
              <Calendar size={24} className="text-purple-600 mb-2" />
              <span className="text-sm font-medium">Gerenciar Agenda</span>
            </Link>
            <Link href="/dashboard/professional/services" className="bg-white p-4 rounded-xl shadow-sm flex flex-col items-center text-center">
              <Scissors size={24} className="text-purple-600 mb-2" />
              <span className="text-sm font-medium">Meus Serviços</span>
            </Link>
            <Link href="/dashboard/professional/analytics" className="bg-white p-4 rounded-xl shadow-sm flex flex-col items-center text-center">
              <DollarSign size={24} className="text-purple-600 mb-2" />
              <span className="text-sm font-medium">Faturamento</span>
            </Link>
            <Link href="/dashboard/professional/settings" className="bg-white p-4 rounded-xl shadow-sm flex flex-col items-center text-center">
              <Settings size={24} className="text-purple-600 mb-2" />
              <span className="text-sm font-medium">Configurações</span>
            </Link>
          </div>
        </section>
      </div>
    </ProfessionalDashboardLayout>
  );
};

export default ProfessionalDashboard;